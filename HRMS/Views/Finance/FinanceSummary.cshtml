@{
    ViewBag.Title = "财务汇总";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
}
<style>
    .modal-body {
        height: 720px;
    }
</style>
<div>
    <div>
        <div class="col-*-12">

            <div id="toolbar" class="toolbar">
                <div style="float:left;"><span>日期：</span></div><div style="float: left; margin-left: 10px;width:15%"><input id="sDate" class="form-control" /></div><div style="float: left; margin-left: 10px"><span>至</span></div><div style="float: left; margin-left: 10px; width: 15%"><input id="sDate2" class="form-control" /></div>
                <div style="float: right; margin-left: 10px; margin-top: 5px; visibility:hidden" class="btn btn-primary" onclick="ExportData()">导出</div>
                <div style="float: right; margin-left: 10px; margin-top: 5px" class="btn btn-primary" onclick="ReRun()">重新汇总</div>
                <div style="float: right; margin-left: 10px; margin-top: 5px" class="btn btn-primary" onclick="Search()">查询</div>
            </div>

            <table id="mytab" class="table table-hover"></table>
            <div class="modal fade" id="addModal" tabindex="-1" role="dialog" aria-hidden="true">
                <div class="modal-dialog" style="width:90%">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                                &times;
                            </button>
                            <h4 class="modal-title" id="addModalLabel">修改记录</h4>
                        </div>
                        <div class="modal-body">
                            <input style="visibility:hidden" type="hidden" id="iGuid" data-bind="value: iGuid">
                            <div class="form-group"> 日期：<input type="text" class="form-control" id="iDate" data-bind="value: iDate" placeholder="请输入日期" readonly="readonly"></div>
                            <div class="form-group">
                                所在公司：
                                <select class="form-control" id="iCompanyId" data-bind="value: iCompanyId">
                                    <option value="-">请选择</option>
                                    @{
                                        foreach (var item in ViewBag.Companies)
                                        {
                                            <option value="@item.iGuid">@item.iName</option>
                                        }
                                    }
                                </select>
                            </div>
                            <div class="form-group">
                                项目名称：
                                <select class="form-control" id="iProjectId" data-bind="value: iProjectId">
                                    <option value="-">请选择</option>
                                    @{
                                        foreach (var item in ViewBag.Projects)
                                        {
                                            <option value="@item.iGuid">@item.iName</option>
                                        }
                                    }
                                </select>
                            </div>
                            <div class="form-group"> 收款情况：<input type="text" class="form-control" id="iReceivable" data-bind="value: iReceivable" placeholder="请输入收款情况"></div>
                            <div class="form-group"> 开票金额：<input type="text" class="form-control" id="iInvoice" data-bind="value: iInvoice" placeholder="请输入开票金额"></div>
                            <div class="form-group" title="差异=开票金额-派遣工工资收-外包工工资收-临时工工资收-管理费-个人社保收-公司社保收-公积金收-残保收-宿舍收-其它收"> 差异：<input type="text" class="form-control" id="iDiffer" data-bind="value: iDiffer" readonly="readonly"></div>

                            <div class="form-group"> 派遣工工资(收)：<input type="text" class="form-control" id="iSalaryIn" data-bind="value: iSalaryIn" placeholder="请输入派遣工工资(收)"></div>
                            <div class="form-group"> 外包工工资(收)：<input type="text" class="form-control" id="iOutSourceSalaryIn" data-bind="value: iOutSourceSalaryIn" placeholder="请输入外包工工资(收)"></div>
                            <div class="form-group"> 临时工工资(收)：<input type="text" class="form-control" id="iTemporarySalaryIn" data-bind="value: iTemporarySalaryIn" placeholder="请输入临时工工资(收)"></div>
                            <div class="form-group"> 管理费：<input type="text" class="form-control" id="iManageFee" data-bind="value: iManageFee" placeholder="请输入管理费"></div>
                            <div class="form-group"> 个人社保(收)：<input type="text" class="form-control" id="iSocialSecurityInP" data-bind="value: iSocialSecurityInP" placeholder="请输入个人社保(收)"></div>
                            <div class="form-group"> 公司社保(收)：<input type="text" class="form-control" id="iSocialSecurityInC" data-bind="value: iSocialSecurityInC" placeholder="请输入公司社保(收)"></div>
                            <div class="form-group"> 公积金(收)：<input type="text" class="form-control" id="iProvidentFundIn" data-bind="value: iProvidentFundIn" placeholder="请输入公积金(收)"></div>
                            <div class="form-group"> 残保(收)：<input type="text" class="form-control" id="iDisabilityBenefitsIn" data-bind="value: iDisabilityBenefitsIn" placeholder="请输入残保(收)"></div>
                            <div class="form-group"> 宿舍费(收)：<input type="text" class="form-control" id="iDormitoryFeeIn" data-bind="value: iDormitoryFeeIn" placeholder="请输入宿舍费(收)"></div>
                            <div class="form-group"> 其它(收)：<input type="text" class="form-control" id="iOtherIn" data-bind="value: iOtherIn" placeholder="请输入其它(收)"></div>
                            <div class="form-group"> 收款备注：<input type="text" class="form-control" id="iInNote" data-bind="value: iInNote" placeholder="请输入收款备注"></div>
                            <div class="form-group"> 派遣工工资(付)：<input type="text" class="form-control" id="iSalaryOut" data-bind="value: iSalaryOut" placeholder="请输入派遣工工资(付)" readonly="readonly"></div>
                            <div class="form-group"> 外包工工资(付)：<input type="text" class="form-control" id="iOutSourceSalaryOut" data-bind="value: iOutSourceSalaryOut" placeholder="请输入外包工工资(付)" readonly="readonly"></div>
                            <div class="form-group"> 临时工工资(付)：<input type="text" class="form-control" id="iTemporarySalaryOut" data-bind="value: iTemporarySalaryOut" placeholder="请输入临时工工资(付)" readonly="readonly"></div>
                            <div class="form-group"> 社保公司(付)：<input type="text" class="form-control" id="iSocialSecurityCompanyPay" data-bind="value: iSocialSecurityCompanyPay" placeholder="请输入社保公司(付)" readonly="readonly"></div>
                            <div class="form-group"> 社保个人(付)：<input type="text" class="form-control" id="iSocialSecurityPersonalPay" data-bind="value: iSocialSecurityPersonalPay" placeholder="请输入社保个人(付)" readonly="readonly"></div>
                            <div class="form-group"> 公积金个人(付) ：<input type="text" class="form-control" id="iProvidentFundPersonalPay" data-bind="value: iProvidentFundPersonalPay" placeholder="请输入公积金个人(付) " readonly="readonly"></div>
                            <div class="form-group"> 公积金公司(付)：<input type="text" class="form-control" id="iProvidentFundCompanyPay" data-bind="value: iProvidentFundCompanyPay" placeholder="请输入公积金公司(付)" readonly="readonly"></div>
                            <div class="form-group"> 社保补缴：<input type="text" class="form-control" id="iSocialSecurityAdditional" data-bind="value: iSocialSecurityAdditional" placeholder="请输入社保补缴" readonly="readonly"></div>
                            <div class="form-group"> 公积金补缴：<input type="text" class="form-control" id="iProvidentFundAdditional" data-bind="value: iProvidentFundAdditional" placeholder="请输入公积金补缴" readonly="readonly"></div>
                            <div class="form-group"> 返费：<input type="text" class="form-control" id="iReturnFee" data-bind="value: iReturnFee" placeholder="请输入返费" readonly="readonly"></div>
                            <div class="form-group"> 临时工费用：<input type="text" class="form-control" id="iTemporaryFee" data-bind="value: iTemporaryFee" placeholder="请输入临时工费用"></div>
                            <div class="form-group"> 个人社保(退)：<input type="text" class="form-control" id="iPersonalSocialSecurityBack" data-bind="value: iPersonalSocialSecurityBack" placeholder="请输入个人社保(退)"></div>
                            @*<div class="form-group"> 班车费(付)：<input type="text" class="form-control" id="iBusFee" data-bind="value: iBusFee" placeholder="请输入班车费(付)"></div>*@
                            <div class="form-group"> 餐费(付)：<input type="text" class="form-control" id="iMealFee" data-bind="value: iMealFee" placeholder="请输入餐费(付)"></div>
                            <div class="form-group"> 宿舍费(付)：<input type="text" class="form-control" id="iDormitoryFeePay" data-bind="value: iDormitoryFeePay" placeholder="请输入宿舍费(付)"></div>
                            <div class="form-group"> 商保费(付)：<input type="text" class="form-control" id="iCommercialInsuranceFeePay" data-bind="value: iCommercialInsuranceFeePay" placeholder="请输入商保费(付)"></div>
                            @*<div class="form-group"> 奖金类(付)：<input type="text" class="form-control" id="iBonusPay" data-bind="value: iBonusPay" placeholder="请输入奖金类(付)"></div>*@
                            @*<div class="form-group"> 赔付款(付)：<input type="text" class="form-control" id="iCompensationPay" data-bind="value: iCompensationPay" placeholder="请输入赔付款(付)"></div>*@
                            <div class="form-group"> 税金：<input type="text" class="form-control" id="iTaxFee" data-bind="value: iTaxFee" placeholder="请输入税金"></div>
                            @*<div class="form-group"> 代理费：<input type="text" class="form-control" id="iAgentFee" data-bind="value: iAgentFee" placeholder="请输入代理费"></div>*@
                            @*<div class="form-group"> 劳保费支出：<input type="text" class="form-control" id="iLaborInsuranceFee" data-bind="value: iLaborInsuranceFee" placeholder="请输入劳保费支出"></div>*@
                            @*<div class="form-group"> 租金：<input type="text" class="form-control" id="iRentFee" data-bind="value: iRentFee" placeholder="请输入租金"></div>*@
                            <div class="form-group"> 个调税：<input type="text" class="form-control" id="iPersonalTax" data-bind="value: iPersonalTax" placeholder="请输入个调税"></div>
                            @*<div class="form-group"> 水电物管费：<input type="text" class="form-control" id="iUtilitiesFee" data-bind="value: iUtilitiesFee" placeholder="请输入水电物管费"></div>*@
                            <div class="form-group"> 办公费：<input type="text" class="form-control" id="iOfficePay" data-bind="value: iOfficePay" placeholder="请输入办公费" readonly="readonly"></div>
                            <div class="form-group"> 公司人员工资：<input type="text" class="form-control" id="iCompanySalaryPay" data-bind="value: iCompanySalaryPay" placeholder="请输入公司人员工资"></div>
                            <div class="form-group"> 公司人员社保：<input type="text" class="form-control" id="iCompanySocialSecurityPay" data-bind="value: iCompanySocialSecurityPay" placeholder="请输入公司人员社保"></div>
                            <div class="form-group"> 公司人员公积金：<input type="text" class="form-control" id="iCompanyProvidentFundPay" data-bind="value: iCompanyProvidentFundPay" placeholder="请输入公司人员公积金"></div>
                            <div class="form-group"> 工伤费用：<input type="text" class="form-control" id="iInjuryPay" data-bind="value: iInjuryPay" placeholder="请输入工伤费用"></div>

                            <div class="form-group"> 残保(付)：<input type="text" class="form-control" id="iDisabilityBenefitsPay" data-bind="value: iDisabilityBenefitsPay" placeholder="请输入残保(付)"></div>
                            <div class="form-group"> 其它付：<input type="text" class="form-control" id="iOtherPay" data-bind="value: iOtherPay" placeholder="请输入其它付"></div>
                            <div class="form-group"> 支出备注：<input type="text" class="form-control" id="iPayNote" data-bind="value: iPayNote" placeholder="请输入支出备注"></div>
                            <div class="form-group" title="临时工利润=临时工工资收-临时工工资付"> 临时工利润：<input type="text" class="form-control" id="iTemporaryProfit" data-bind="value: iTemporaryProfit" readonly="readonly"></div>
                            <div class="form-group" title="派遣工利润=开票金额-临时工工资收-外包工工资收-派遣工工资付-社保公司付-社保个人付-公积金公司付-公积金个人付-社保补缴-公积金补缴-返费-临时工费用-个人社保退-餐费付-宿舍费付-商保费付-税金-个调税-办公费-公司人员工资-公司人员社保-公司人员公积金-工伤费用-残保付-其他付。注意：因为外包工费用也在里面，所以可能出现负数"> 派遣工利润：<input type="text" class="form-control" id="iProfit" data-bind="value: iProfit" readonly="readonly"></div>
                            <div class="form-group" title="外包工利润=外包工工资收-外包工工资付。注意：其它开销放到了派遣工里面了"> 外包工利润：<input type="text" class="form-control" id="iOutSourceProfit" data-bind="value: iOutSourceProfit" readonly="readonly"></div>
                            <div class="form-group"> 总利润：<input type="text" class="form-control" id="iTotalProfit" data-bind="value: iTotalProfit" readonly="readonly"></div>

                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">取消</button>
                            <button type="button" class="btn btn-primary" id="removeRecord">删除</button>
                            <button type="button" class="btn btn-primary" id="submit">提交</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    //正则校验两位小数
    function clearNoNum(obj) {
        //先把非数字的都替换掉，除了数字和.
        obj.value = obj.value.replace(/[^\d.]/g, "");
        //保证只有出现一个.而没有多个.
        obj.value = obj.value.replace(/\.{2,}/g, ".");
        //必须保证第一个为数字而不是.
        obj.value = obj.value.replace(/^\./g, "");
        //保证.只出现一次，而不能出现两次以上
        obj.value = obj.value.replace(".", "$#$").replace(/\./g, "").replace("$#$", ".");
        //只能输入两个小数
        obj.value = obj.value.replace(/^(\-)*(\d+)\.(\d\d).*$/, '$1$2.$3');
        $(obj).trigger("change");
    }

    //bootstraptable 高度
    function tableHeight() {
        return $(window).height() * 0.86;
    }

    //json 日期转字符串
    function ChangeDateFormat(jsondate) {
        if (!jsondate) return "";
        jsondate = jsondate.replace("/Date(", "").replace(")/", "");
        if (jsondate.indexOf("+") > 0) {
            jsondate = jsondate.substring(0, jsondate.indexOf("+"));
        }
        else if (jsondate.indexOf("-") > 0) {
            jsondate = jsondate.substring(0, jsondate.indexOf("-"));
        }

        var date = new Date(parseInt(jsondate, 10));
        var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
        var currentDate = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();

        return date.getFullYear()
            + "-"
            + month
            + "-"
            + currentDate;
    }

    //查询
    function Search() {
        $('#mytab').bootstrapTable('refresh');
    }
    //重新生成
    function ReRun() {
        var sPayMonth = $("#sDate").val();
        if (confirm("确认要重新汇总【" + sPayMonth + "】所有数据？")) {
            var param = {};
            param.payMonth = sPayMonth;
            $.ajax({
                url: "/FinanceAjax/ReRunFinanceSummary",
                type: "POST",
                data: param,
                dataType: 'text',
                success: function (data) {
                    if (data == "success") {
                        toastr.success('重新汇总成功！');
                        $('#mytab').bootstrapTable('refresh');
                    }
                    else {
                        console.log(data);
                        toastr.error('重新汇总失败！');
                    }
                }
            });
        }
    }

    function ViewModel() {
        var self = this;
        self.iGuid = ko.observable("");
        self.iCompanyId = ko.observable("");
        self.iProjectId = ko.observable("");
        self.iDate = ko.observable("");
        self.iReceivable = ko.observable("");
        self.iInvoice = ko.observable("");
        self.iSalaryIn = ko.observable("");
        self.iOutSourceSalaryIn = ko.observable("");
        self.iManageFee = ko.observable("");
        self.iSocialSecurityInP = ko.observable("");
        self.iSocialSecurityInC = ko.observable("");
        self.iProvidentFundIn = ko.observable("");
        self.iDisabilityBenefitsIn = ko.observable("");
        self.iDormitoryFeeIn = ko.observable("");
        self.iOtherIn = ko.observable("");
        self.iInNote = ko.observable("");
        self.iSalaryOut = ko.observable("");
        self.iOutSourceSalaryOut = ko.observable("");
        self.iSocialSecurityCompanyPay = ko.observable("");
        self.iSocialSecurityPersonalPay = ko.observable("");
        self.iProvidentFundPersonalPay = ko.observable("");
        self.iProvidentFundCompanyPay = ko.observable("");
        self.iSocialSecurityAdditional = ko.observable("");
        self.iProvidentFundAdditional = ko.observable("");
        self.iReturnFee = ko.observable("");
        self.iDisabilityBenefitsPay = ko.observable("");
        self.iPersonalSocialSecurityBack = ko.observable("");
        //self.iBusFee = ko.observable("");
        self.iMealFee = ko.observable("");
        self.iDormitoryFeePay = ko.observable("");
        self.iCommercialInsuranceFeePay = ko.observable("");
        //self.iBonusPay = ko.observable("");
        //self.iCompensationPay = ko.observable("");
        self.iTaxFee = ko.observable("");
        self.iTemporarySalaryOut = ko.observable("");
        self.iTemporarySalaryIn = ko.observable("");
        self.iTemporaryFee = ko.observable("");
        //self.iAgentFee = ko.observable("");
        //self.iLaborInsuranceFee = ko.observable("");
        //self.iRentFee = ko.observable("");
        self.iPersonalTax = ko.observable("");

        //self.iUtilitiesFee = ko.observable("");
        self.iOfficePay = ko.observable("");
        self.iCompanySalaryPay = ko.observable("");
        self.iCompanySocialSecurityPay = ko.observable("");
        self.iCompanyProvidentFundPay = ko.observable("");
        self.iInjuryPay = ko.observable("");
        self.iOtherPay = ko.observable("");
        self.iPayNote = ko.observable("");
        self.iCreatedOn = ko.observable("");
        self.iCreatedBy = ko.observable("");
        self.iUpdatedOn = ko.observable("");
        self.iUpdatedBy = ko.observable("");
        self.iStatus = ko.observable("");
        self.iIsDeleted = ko.observable("");
        self.iDiffer = ko.computed({
            read: function () {
                if (self.iInvoice() === "" || self.iSalaryIn() === "" || self.iTemporarySalaryIn() === "" || self.iOutSourceSalaryIn() === "" || self.iManageFee() === "" || self.iSocialSecurityInP() === "" || self.iSocialSecurityInC() === "" || self.iProvidentFundIn() === "" || self.iDisabilityBenefitsIn() === "" || self.iDormitoryFeeIn() === "" || self.iOtherIn() === "")
                    return "";
                return (Number(self.iInvoice()) - Number(self.iSalaryIn()) - Number(self.iTemporarySalaryIn()) - Number(self.iOutSourceSalaryIn()) - Number(self.iManageFee()) - Number(self.iSocialSecurityInP()) - Number(self.iSocialSecurityInC()) - Number(self.iProvidentFundIn()) - Number(self.iDisabilityBenefitsIn()) - Number(self.iDormitoryFeeIn()) - Number(self.iOtherIn())).toFixed(2);

            },
            write: function (value) {
            }
        });
        self.iProfit = ko.computed({
            read: function () {
                if (self.iInvoice() === "" || self.iTemporarySalaryIn() === "" || self.iOutSourceSalaryIn() === "" || self.iSalaryOut() === "" || self.iSocialSecurityCompanyPay() === "" || self.iSocialSecurityPersonalPay() === "" || self.iProvidentFundPersonalPay() === "" || self.iProvidentFundCompanyPay() === ""
                    || self.iSocialSecurityAdditional() === "" || self.iProvidentFundAdditional() === "" || self.iReturnFee() === "" || self.iTemporaryFee() === "" || self.iPersonalSocialSecurityBack() === "" || self.iDisabilityBenefitsPay() === "" || self.iMealFee() === "" || self.iDormitoryFeePay() === ""
                    || self.iCommercialInsuranceFeePay() === "" || self.iTaxFee() === "" || self.iPersonalTax() === ""
                    || self.iOfficePay() === "" || self.iCompanySalaryPay() === "" || self.iCompanySocialSecurityPay() === "" || self.iCompanyProvidentFundPay() === ""
                    || self.iInjuryPay() === "" || self.iOtherPay() === "")
                    return "";
                return (Number(self.iInvoice()) - Number(self.iTemporarySalaryIn()) - Number(self.iOutSourceSalaryIn()) - Number(self.iSalaryOut()) - Number(self.iSocialSecurityCompanyPay()) - Number(self.iSocialSecurityPersonalPay()) - Number(self.iProvidentFundPersonalPay()) - Number(self.iProvidentFundCompanyPay())
                    - Number(self.iSocialSecurityAdditional()) - Number(self.iProvidentFundAdditional()) - Number(self.iReturnFee()) - Number(self.iTemporaryFee()) - Number(self.iPersonalSocialSecurityBack()) - Number(self.iDisabilityBenefitsPay()) - Number(self.iMealFee()) - Number(self.iDormitoryFeePay())
                - Number(self.iCommercialInsuranceFeePay()) - Number(self.iTaxFee()) - Number(self.iPersonalTax())
                    - Number(self.iOfficePay()) - Number(self.iCompanySalaryPay()) - Number(self.iCompanySocialSecurityPay()) - Number(self.iCompanyProvidentFundPay())
                    - Number(self.iInjuryPay()) - Number(self.iOtherPay())).toFixed(2);
            },
            write: function (value) {
            }
        });
        self.iOutSourceProfit = ko.computed({
            read: function () {
                if (self.iOutSourceSalaryOut() === "" || self.iOutSourceSalaryIn() === "")
                    return "";
                return (Number(self.iOutSourceSalaryIn()) - Number(self.iOutSourceSalaryOut())).toFixed(2);
            },
            write: function (value) {
            }
        });
        self.iTemporaryProfit = ko.computed({
            read: function () {
                if (self.iTemporarySalaryOut() === "" || self.iTemporarySalaryIn() === "")
                    return "";
                return (Number(self.iTemporarySalaryIn()) - Number(self.iTemporarySalaryOut())).toFixed(2);
            },
            write: function (value) {
            }
        });
        self.iTotalProfit = ko.computed({
            read: function () {
                if (self.iTemporaryProfit() === "" || self.iProfit() === "" || self.iOutSourceProfit() === "")
                    return "";
                return (Number(self.iTemporaryProfit()) + Number(self.iProfit()) + Number(self.iOutSourceProfit())).toFixed(2);
            },
            write: function (value) {
            }
        });
    }

    function ExportData() {
        var url = "/FinanceAjax/ExportFinanceSummary";
        var params = {};
        params.search = $(".search input[type='text']").first().val();
        params.sItemName = $("#projectSelect").val();
        params.sCompany = $("#companySelect").val();
        params.sEmpNo = $("#sEmpNo").val();
        params.sName = $("#sName").val();
        params.sIdCard = $("#sIdCard").val();
        params.sPayPlace = $("#sPayPlace").val();
        params.sPayMonth = $("#sPayMonth").val();
        params.sPayMonth2 = $("#sPayMonth2").val();
        var inputs = '<input type="hidden" name="searchpara" value="' + JSON.stringify(params).replace(new RegExp("\"", "gm"), "'") + '" />';
        $('<form action="' + url + '" method="post" target="_blank">' + inputs + '</form>').appendTo('body').submit().remove();
    }
    $(function () {
        $("#removeRecord").hide();
        //重置函数
        $("div.icon-reorder").click(function () {
            $('#mytab').bootstrapTable('resetView', {
                height: tableHeight()
            })
        })
        //根据窗口调整表格高度
        $(window).resize(function () {
            $('#mytab').bootstrapTable('resetView', {
                height: tableHeight()
            })
        })
        //Enter 键函数
        document.onkeydown = function (e) {
            e = e || window.event;
            if (e.keyCode == 13) {
                Search();
            }
        }
        //禁用功能
        $("#iCompanyId").attr("disabled", true);
        $("#iProjectId").attr("disabled", true);
        $("#iDiffer").attr("readonly", "readonly");
        $("#iTotal").attr("readonly", "readonly");

        //权限判定
        //此页面只有超级管理员可修改

        //查询日期选择绑定
        $('#sDate').datetimepicker({
            format: 'yyyymm',
            weekStart: 1,
            autoclose: true,
            startView: 3,
            minView: 3,
            forceParse: false,
            language: 'zh-CN'
        }).on("changeDate", function (ev) {
            var date = $('#sDate').val();
            if (date > $('#sDate2').val())
                $("#sDate2").val(date);
        });
        $('#sDate2').datetimepicker({
            format: 'yyyymm',
            weekStart: 1,
            autoclose: true,
            startView: 3,
            minView: 3,
            forceParse: false,
            language: 'zh-CN'
        }).on("changeDate", function (ev) {
            var date = $('#sDate2').val();
            if (date < $('#sDate').val())
                $("#sDate").val(date);
        });
        $("#sDate").val('@DateTime.Now.AddMonths(-1).ToString("yyyyMM")');
        $("#sDate2").val('@DateTime.Now.AddMonths(-1).ToString("yyyyMM")');
        //弹窗日期绑定

        //必填校验
        $("#iCompanyId").change(function () {
            var value = $("#iCompanyId").val();
            if (value != "-") {
                $('#iCompanyId').removeClass("warning");
            }
            else {
                $('#iCompanyId').addClass("warning");
            }
        });
        $("#iProjectId").change(function () {
            var value = $("#iProjectId").val();
            if (value != "-") {
                $('#iProjectId').removeClass("warning");
            }
            else {
                $('#iProjectId').addClass("warning");
            }
        });
        $('#mytab').bootstrapTable({
            url: "/FinanceAjax/GetAllFinanceSummary",//数据源
            dataField: "rows",//服务端返回数据键值 就是说记录放的键值是rows，分页时使用总记录数的键值为total
            sortName: "iUpdatedOn",//排序列
            sortOrder: "desc",
            cache: false,
            striped: true,//條紋行
            clickToSelect: true,//选择行即选择checkbox
            searchOnEnterKey: false,//ENTER键搜索
            height: tableHeight(),//高度调整
            search: true,//是否搜索
            pagination: true,//是否分页
            pageSize: 15,//单页记录数
            pageNumber: 1,//起始页
            pageList: [15, 100, 500, 1000, 10000],//分页步进值
            sidePagination: "server",//服务端分页
            contentType: "application/x-www-form-urlencoded",//请求数据内容格式 默认是 application/json 自己根据格式自行服务端处理
            dataType: "json",//期待返回数据类型
            method: "post",//请求方式
            searchAlign: "left",//查询框对齐方式
            queryParamsType: "limit",//查询参数组织方式
            showRefresh: false,//刷新按钮
            showColumns: true,//列选择按钮
            buttonsAlign: "left",//按钮对齐方式
            toolbar: "#toolbar",//指定工具栏
            toolbarAlign: "right",//工具栏对齐方式
            queryParams: function getParams(params) {
                params.sProjectId = $("#projectSelect").val();
                params.sCompanyId = $("#companySelect").val();
                params.sDate = $("#sDate").val();
                params.sDate2 = $("#sDate2").val();
                return params;
            },
            columns: [
                 {
                     field: 'Number',
                     title: '序号',
                     formatter: function (value, row, index) {
                         return ($('#mytab').bootstrapTable('getOptions').pageNumber - 1) * $('#mytab').bootstrapTable('getOptions').pageSize + index + 1;
                     }
                 }
                 , { field: "iGuid", title: "iGuid", visible: false, switchable: false }
                 , { field: "iCompanyId", title: "公司", sortable: true }
                 , { field: "iProjectId", title: "项目", sortable: true }
                 , { field: "iDate", title: "日期", sortable: true }
                 , { field: "iReceivable", title: "收款情况", sortable: true }
                 , { field: "iInvoice", title: "开票金额", sortable: true }
                 , {
                     field: "iDiffer", title: "差异", sortable: false, formatter: function (value, row, index) {
                         if (row.iInvoice === "" || row.iSalaryIn === "" || row.iTemporarySalaryIn === "" || row.iManageFee === "" || row.iSocialSecurityInP === "" || row.iSocialSecurityInC === "" || row.iProvidentFundIn === "" || row.iDisabilityBenefitsIn === "" || row.iDormitoryFeeIn === "" || row.iOtherIn === "")
                             return "";
                         return (Number(row.iInvoice) - Number(row.iSalaryIn) - Number(row.iTemporarySalaryIn) - Number(row.iManageFee) - Number(row.iSocialSecurityInP) - Number(row.iSocialSecurityInC) - Number(row.iProvidentFundIn) - Number(row.iDisabilityBenefitsIn) - Number(row.iDormitoryFeeIn) - Number(row.iOtherIn)).toFixed(2);

                     }
                 }
                 , { field: "iSalaryIn", title: "派遣工工资(收)", sortable: true }
                 , { field: "iOutSourceSalaryIn", title: "外包工工资(收)", sortable: true }
                 , { field: "iTemporarySalaryIn", title: "临时工工资(收)", sortable: true }
                 , { field: "iManageFee", title: "管理费", sortable: true }
                 , { field: "iSocialSecurityInP", title: "个人社保(收)", sortable: true }
                 , { field: "iSocialSecurityInC", title: "公司社保(收)", sortable: true }
                 , { field: "iProvidentFundIn", title: "公积金(收)", sortable: true }
                 , { field: "iDisabilityBenefitsIn", title: "残保(收)", sortable: true }
                 , { field: "iDormitoryFeeIn", title: "宿舍费(收)", sortable: true }
                 , { field: "iOtherIn", title: "其它(收)", sortable: true }
                 , { field: "iInNote", title: "收款备注", sortable: true }
                 , { field: "iSalaryOut", title: "派遣工工资(付)", sortable: true }
                 , { field: "iOutSourceSalaryOut", title: "外包工工资(付)", sortable: true }
                 , { field: "iTemporarySalaryOut", title: "临时工工资(付)", sortable: true }
                 , { field: "iSocialSecurityCompanyPay", title: "社保公司(付)", sortable: true }
                 , { field: "iSocialSecurityPersonalPay", title: "社保个人(付)", sortable: true }
                 , { field: "iProvidentFundPersonalPay", title: "公积金个人(付) ", sortable: true }
                 , { field: "iProvidentFundCompanyPay", title: "公积金公司(付)", sortable: true }
                 , { field: "iSocialSecurityAdditional", title: "社保补缴", sortable: true }
                 , { field: "iProvidentFundAdditional", title: "公积金补缴", sortable: true }
                 , { field: "iReturnFee", title: "返费", sortable: true }
                 , { field: "iPersonalSocialSecurityBack", title: "个人社保(退)", sortable: true }
                 , { field: "iMealFee", title: "餐费(付)", sortable: true }
                 , { field: "iDormitoryFeePay", title: "宿舍费(付)", sortable: true }
                 , { field: "iCommercialInsuranceFeePay", title: "商保费(付)", sortable: true }
                 , { field: "iTaxFee", title: "税金", sortable: true }
                 , { field: "iPersonalTax", title: "个调税", sortable: true }
                 , { field: "iTemporaryFee", title: "临时工费用", sortable: true }
                 , { field: "iOfficePay", title: "办公费", sortable: true }
                 , { field: "iCompanySalaryPay", title: "公司人员工资", sortable: true }
                 , { field: "iCompanySocialSecurityPay", title: "公司人员社保", sortable: true }
                 , { field: "iCompanyProvidentFundPay", title: "公司人员公积金", sortable: true }
                 , { field: "iInjuryPay", title: "工伤费用", sortable: true }
                 , { field: "iDisabilityBenefitsPay", title: "残保(付)", sortable: true }
                 , { field: "iOtherPay", title: "其它付", sortable: true }
                 , { field: "iPayNote", title: "支出备注", sortable: true }
                 , {
                     field: "iProfit", title: "派遣工利润", sortable: false, formatter: function (value, row, index) {
                         if (row.iInvoice == "" || row.iTemporarySalaryIn === "" || row.iSalaryOut === "" || row.iSocialSecurityCompanyPay === "" || row.iSocialSecurityPersonalPay === "" || row.iProvidentFundPersonalPay === "" || row.iProvidentFundCompanyPay === ""
                    || row.iSocialSecurityAdditional === "" || row.iProvidentFundAdditional === "" || row.iReturnFee === "" || row.iTemporaryFee === "" || row.iPersonalSocialSecurityBack === "" || row.iDisabilityBenefitsPay === "" || row.iMealFee === "" || row.iDormitoryFeePay === ""
                    || row.iCommercialInsuranceFeePay === "" || row.iTaxFee === "" || row.iPersonalTax === ""
                    || row.iOfficePay === "" || row.iCompanySalaryPay === "" || row.iCompanySocialSecurityPay === "" || row.iCompanyProvidentFundPay === ""
                    || row.iInjuryPay === "" || row.iOtherPay === "")
                         {
                             row.iProfit = 0;
                             return "";
                         }
                         row.iProfit = (Number(row.iInvoice) - Number(row.iTemporarySalaryIn) - Number(row.iOutSourceSalaryIn) - Number(row.iSalaryOut) - Number(row.iSocialSecurityCompanyPay) - Number(row.iSocialSecurityPersonalPay) - Number(row.iProvidentFundPersonalPay) - Number(row.iProvidentFundCompanyPay)
                    - Number(row.iSocialSecurityAdditional) - Number(row.iProvidentFundAdditional) - Number(row.iReturnFee) - Number(row.iTemporaryFee) - Number(row.iPersonalSocialSecurityBack) - Number(row.iDisabilityBenefitsPay) - Number(row.iMealFee) - Number(row.iDormitoryFeePay)
                - Number(row.iCommercialInsuranceFeePay) - Number(row.iTaxFee) - Number(row.iPersonalTax)
                    - Number(row.iOfficePay) - Number(row.iCompanySalaryPay) - Number(row.iCompanySocialSecurityPay) - Number(row.iCompanyProvidentFundPay)
                    - Number(row.iInjuryPay) - Number(row.iOtherPay)).toFixed(2);
                         return row.iProfit;
                     }
                 }, {
                     field: "iOutSourceProfit", title: "外包工利润", sortable: false, formatter: function (value, row, index) {
                         if (row.iOutSourceSalaryOut === "" || row.iOutSourceSalaryIn === "") {
                             row.iOutSourceProfit = 0;
                             return "";
                         }
                         row.iOutSourceProfit = (Number(row.iOutSourceSalaryIn) - Number(row.iOutSourceSalaryOut)).toFixed(2);
                         return row.iOutSourceProfit;
                     }
                 }, {
                     field: "iTemporaryProfit", title: "临时工利润", sortable: false, formatter: function (value, row, index) {
                         if (row.iTemporarySalaryOut === "" || row.iTemporarySalaryIn === "")
                         {
                             row.iTemporaryProfit = 0;
                             return "";
                         }
                         row.iTemporaryProfit = (Number(row.iTemporarySalaryIn) - Number(row.iTemporarySalaryOut)).toFixed(2);
                         return row.iTemporaryProfit;
                     }
                 }, {
                     field: "iTotalProfit", title: "总利润", sortable: false, formatter: function (value, row, index) {
                         if (row.iTemporaryProfit === "" || row.iProfit === "" || row.iOutSourceProfit === "")
                             return "";
                         return (Number(row.iTemporaryProfit) + Number(row.iProfit) + Number(row.iOutSourceProfit)).toFixed(2);
                     }
                 }
            ],
            onClickRow: function (row, $element) {
                //$element是当前tr的jquery对象
                //$element.css("background-color", "green");
            },//单击row事件
            onDblClickRow: function (row, $element) {
                if (window.menuRights == "r") {
                    return;
                }
                $('#addModal').modal('toggle');
                $("#iCompanyId").removeClass("warning");
                $('#iProjectId').removeClass("warning");

                var width = $("#addModal").width();
                var height = $("#addModal").height();
                var $shade = $('<div id="waiting"></div>');
                $shade.css({ width: '100%', height: '100%', position: 'absolute', top: 0, left: 0, background: '#fff url(/Content/images/waiting.gif) center center no-repeat', opacity: 0.4 });
                $("#addModal").append($shade);
                $.get("/FinanceAjax/GetFinanceSummary?iguid=" + row.iGuid, function (result) {
                    if (result.success) {
                        myViewModel.iGuid(result.data.iGuid);
                        myViewModel.iCompanyId(result.data.iCompanyId);
                        myViewModel.iProjectId(result.data.iProjectId);
                        myViewModel.iDate(result.data.iDate);
                        myViewModel.iReceivable(result.data.iReceivable);
                        myViewModel.iInvoice(result.data.iInvoice);
                        myViewModel.iSalaryIn(result.data.iSalaryIn);
                        myViewModel.iOutSourceSalaryIn(result.data.iOutSourceSalaryIn);
                        myViewModel.iTemporarySalaryIn(result.data.iTemporarySalaryIn);
                        myViewModel.iManageFee(result.data.iManageFee);
                        myViewModel.iSocialSecurityInP(result.data.iSocialSecurityInP);
                        myViewModel.iSocialSecurityInC(result.data.iSocialSecurityInC);
                        myViewModel.iProvidentFundIn(result.data.iProvidentFundIn);
                        myViewModel.iDisabilityBenefitsIn(result.data.iDisabilityBenefitsIn);
                        myViewModel.iDormitoryFeeIn(result.data.iDormitoryFeeIn);
                        myViewModel.iOtherIn(result.data.iOtherIn);
                        myViewModel.iInNote(result.data.iInNote);
                        myViewModel.iSalaryOut(result.data.iSalaryOut);
                        myViewModel.iOutSourceSalaryOut(result.data.iOutSourceSalaryOut);
                        myViewModel.iTemporarySalaryOut(result.data.iTemporarySalaryOut);
                        myViewModel.iSocialSecurityCompanyPay(result.data.iSocialSecurityCompanyPay);
                        myViewModel.iSocialSecurityPersonalPay(result.data.iSocialSecurityPersonalPay);
                        myViewModel.iProvidentFundPersonalPay(result.data.iProvidentFundPersonalPay);
                        myViewModel.iProvidentFundCompanyPay(result.data.iProvidentFundCompanyPay);
                        myViewModel.iSocialSecurityAdditional(result.data.iSocialSecurityAdditional);
                        myViewModel.iProvidentFundAdditional(result.data.iProvidentFundAdditional);
                        myViewModel.iReturnFee(result.data.iReturnFee);
                        myViewModel.iDisabilityBenefitsPay(result.data.iDisabilityBenefitsPay);
                        myViewModel.iPersonalSocialSecurityBack(result.data.iPersonalSocialSecurityBack);
                        myViewModel.iMealFee(result.data.iMealFee);
                        myViewModel.iDormitoryFeePay(result.data.iDormitoryFeePay);
                        myViewModel.iCommercialInsuranceFeePay(result.data.iCommercialInsuranceFeePay);
                        myViewModel.iTaxFee(result.data.iTaxFee);
                        myViewModel.iTemporaryFee(result.data.iTemporaryFee);
                        myViewModel.iPersonalTax(result.data.iPersonalTax);
                        myViewModel.iOfficePay(result.data.iOfficePay);
                        myViewModel.iCompanySalaryPay(result.data.iCompanySalaryPay);
                        myViewModel.iCompanySocialSecurityPay(result.data.iCompanySocialSecurityPay);
                        myViewModel.iCompanyProvidentFundPay(result.data.iCompanyProvidentFundPay);
                        myViewModel.iInjuryPay(result.data.iInjuryPay);
                        myViewModel.iOtherPay(result.data.iOtherPay);
                        myViewModel.iPayNote(result.data.iPayNote);
                        myViewModel.iCreatedOn(result.data.iCreatedOn);
                        myViewModel.iCreatedBy(result.data.iCreatedBy);
                        myViewModel.iUpdatedOn(result.data.iUpdatedOn);
                        myViewModel.iUpdatedBy(result.data.iUpdatedBy);
                        myViewModel.iStatus(result.data.iStatus);
                        myViewModel.iIsDeleted(result.data.iIsDeleted);
                    }
                    else {
                        console.log(result.msg);
                        toastr.error('获取数据失败！');
                    }
                    $shade.remove();
                });
            },
            onLoadSuccess: function (data) {
            },
            locale: "zh-CN",//中文支持,
            detailView: false, //是否显示详情折叠
            detailFormatter: function (index, row, element) {
                var html = '';
                $.each(row, function (key, val) {
                    html += "<p>" + key + ":" + val + "</p>"
                });
                return html;
            }
        });

        $("#submit").click(function () {
            var warnings = $(".warning");
            if (warnings && warnings.length > 0) {
                toastr.error('数据验证未通过！');
                return;
            }
            $(this).attr({ "disabled": "disabled" });
            var param = {};
            param.jsonString = ko.toJSON(myViewModel);
            $.ajax({
                url: "/FinanceAjax/FinanceSummarySaveChanges",
                type: "POST",
                data: param,
                dataType: 'text',
                success: function (data) {
                    if (data == "success") {
                        toastr.success('保存成功！');
                        $('#mytab').bootstrapTable('refresh');
                    }
                    else {
                        console.log(data);
                        toastr.error('保存数据失败！');
                    }
                    $('#addModal').modal('toggle');
                    $("#submit").removeAttr("disabled");
                }
            });
        });

        $("#removeRecord").click(function () {
            if (confirm("确认要删除？")) {
                var param = {};
                myViewModel.iIsDeleted("1");
                param.jsonString = ko.toJSON(myViewModel);
                $.ajax({
                    url: "/FinanceAjax/FinanceSummarySaveChanges",
                    type: "POST",
                    data: param,
                    dataType: 'text',
                    success: function (data) {
                        if (data == "success") {
                            toastr.success('删除成功！');
                            $('#mytab').bootstrapTable('refresh');
                        }
                        else {
                            console.log(data);
                            toastr.error('删除数据失败！');
                        }
                        $('#addModal').modal('toggle');
                    }
                });
            }
        });

        var myViewModel = new ViewModel();
        ko.applyBindings(myViewModel);
    })
</script>
