@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
}
<style>
    .search {
        width: auto;
    }
</style>

<div>
    <div>
        <div class="col-*-12">

            <div id="toolbar">
                <div style="float:left" class="btn btn-primary" data-toggle="modal" data-target="#addModal" id="NewRecord">添加记录</div>
                <div style="float:left;margin-left:10px" class="btn btn-primary" data-toggle="modal" data-target="#importModal">数据导入</div>
                <div style="float:left;margin-left:10px" class="btn btn-primary" onclick="ExportData()">数据导出</div>
            </div>

            <table id="mytab" class="table table-hover"></table>

            <div class="modal fade" id="addModal" tabindex="-1" role="dialog" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                                &times;
                            </button>
                            <h4 class="modal-title" id="addModalLabel">添加记录</h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group" style="visibility:hidden"> iGuid：<input type="text" class="form-control" id="iGuid" data-bind="value: iGuid" placeholder="请输入iGuid"></div>
                            <div class="form-group"> 项目名称：<input type="text" class="form-control" id="iItemName" data-bind="value: iItemName" placeholder="请输入项目名称"></div>
                            <div class="form-group"> 所在公司：<input type="text" class="form-control" id="iCompany" data-bind="value: iCompany" placeholder="请输入所在公司"></div>
                            <div class="form-group"> 所在工作地：<input type="text" class="form-control" id="iWorkPlace" data-bind="value: iWorkPlace" placeholder="请输入所在工作地"></div>
                            <div class="form-group"> 工号：<input type="text" class="form-control" id="iEmpNo" data-bind="value: iEmpNo" placeholder="请输入工号"></div>
                            <div class="form-group"> 姓名：<input type="text" class="form-control" id="iName" data-bind="value: iName" placeholder="请输入姓名"></div>
                            <div class="form-group"> 身份证号：<input type="text" class="form-control" id="iIdCard" data-bind="value: iIdCard" placeholder="请输入身份证号"></div>
                            <div class="form-group"> 性别：<input type="text" class="form-control" id="iSex" data-bind="value: iSex" placeholder="请输入性别"></div>
                            <div class="form-group"> 出生日期：<input type="text" class="form-control" id="iBirthday" data-bind="value: iBirthday" placeholder="请输入出生日期"></div>
                            <div class="form-group"> 户籍：<input type="text" class="form-control" id="iRegistry" data-bind="value: iRegistry" placeholder="请输入户籍"></div>
                            <div class="form-group"> 民族：<input type="text" class="form-control" id="iNation" data-bind="value: iNation" placeholder="请输入民族"></div>
                            <div class="form-group"> 户口性质：<input type="text" class="form-control" id="iResidenceProperty" data-bind="value: iResidenceProperty" placeholder="请输入户口性质"></div>
                            <div class="form-group"> 户籍地址：<input type="text" class="form-control" id="iRegistryAddress" data-bind="value: iRegistryAddress" placeholder="请输入户籍地址"></div>
                            <div class="form-group"> 签发机关：<input type="text" class="form-control" id="iIssuedBy" data-bind="value: iIssuedBy" placeholder="请输入签发机关"></div>
                            <div class="form-group"> 身份证有效期：<input type="text" class="form-control" id="iIdCardValidate" data-bind="value: iIdCardValidate" placeholder="请输入身份证有效期"></div>
                            <div class="form-group"> 现住地：<input type="text" class="form-control" id="iLivedIn" data-bind="value: iLivedIn" placeholder="请输入现住地"></div>
                            <div class="form-group"> 联系电话：<input type="text" class="form-control" id="iPhone" data-bind="value: iPhone" placeholder="请输入联系电话"></div>
                            <div class="form-group"> 紧急联系人：<input type="text" class="form-control" id="iEmeContact" data-bind="value: iEmeContact" placeholder="请输入紧急联系人"></div>
                            <div class="form-group"> 紧急联系人电话：<input type="text" class="form-control" id="iEmeContactPhone" data-bind="value: iEmeContactPhone" placeholder="请输入紧急联系人电话"></div>
                            <div class="form-group"> 邮箱：<input type="text" class="form-control" id="iEmail" data-bind="value: iEmail" placeholder="请输入邮箱"></div>
                            <div class="form-group"> 邮编：<input type="text" class="form-control" id="iPostCode" data-bind="value: iPostCode" placeholder="请输入邮编"></div>
                            <div class="form-group"> 身高（cm）：<input type="text" class="form-control" id="iHeight" data-bind="value: iHeight" placeholder="请输入身高（cm）"></div>
                            <div class="form-group"> 体重：<input type="text" class="form-control" id="iWeight" data-bind="value: iWeight" placeholder="请输入体重"></div>
                            <div class="form-group"> 血型：<input type="text" class="form-control" id="iBloodType" data-bind="value: iBloodType" placeholder="请输入血型"></div>
                            <div class="form-group"> 婚姻状况：<input type="text" class="form-control" id="iMariage" data-bind="value: iMariage" placeholder="请输入婚姻状况"></div>
                            <div class="form-group"> 年龄：<input type="text" class="form-control" id="iAge" data-bind="value: iAge" placeholder="请输入年龄"></div>
                            <div class="form-group"> 体检：<input type="text" class="form-control" id="iHealthCheck" data-bind="value: iHealthCheck" placeholder="请输入体检"></div>
                            <div class="form-group"> 政治面貌：<input type="text" class="form-control" id="iPolitical" data-bind="value: iPolitical" placeholder="请输入政治面貌"></div>
                            <div class="form-group"> 文化水平：<input type="text" class="form-control" id="iEducationLevel" data-bind="value: iEducationLevel" placeholder="请输入文化水平"></div>
                            <div class="form-group"> 专业：<input type="text" class="form-control" id="iMajor" data-bind="value: iMajor" placeholder="请输入专业"></div>
                            <div class="form-group"> 毕业学校：<input type="text" class="form-control" id="iGraduatedSchool" data-bind="value: iGraduatedSchool" placeholder="请输入毕业学校"></div>
                            <div class="form-group"> 毕业时间：<input type="text" class="form-control" id="iGraduatedDate" data-bind="value: iGraduatedDate" placeholder="请输入毕业时间"></div>
                            <div class="form-group"> 工作经历：<input type="text" class="form-control" id="iWorkExperience" data-bind="value: iWorkExperience" placeholder="请输入工作经历"></div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">取消</button>
                            <button type="button" class="btn btn-primary" id="addRecord">提交</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal fade" id="importModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                            <h4 class="modal-title" id="">数据导入</h4>
                        </div>
                        <div class="modal-body">
                            <form>
                                <a href="~/UploadFiles/Template/人力资源系统导入模板.xls" class="form-control" style="border:none;">下载导入模板</a>
                                <input type="file" name="txt_file" id="txt_file" multiple class="file-loading" />
                            </form>
                        </div>
                    </div>
                </div>
            </div>



        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        $("div.icon-reorder").click(function () {
            $('#mytab').bootstrapTable('resetView', {
                height: tableHeight()
            })
        })
        //根据窗口调整表格高度
        $(window).resize(function () {
            $('#mytab').bootstrapTable('resetView', {
                height: tableHeight()
            })
        })

        $('#mytab').bootstrapTable({
            url: "/HR/GetAllHRInfo",//数据源
            dataField: "rows",//服务端返回数据键值 就是说记录放的键值是rows，分页时使用总记录数的键值为total
            sortName: "iGuid",//排序列
            cache: false,
            striped: true,//條紋行
            clickToSelect: true,//选择行即选择checkbox
            searchOnEnterKey: true,//ENTER键搜索
            height: tableHeight(),//高度调整
            search: true,//是否搜索
            pagination: true,//是否分页
            pageSize: 15,//单页记录数
            pageNumber: 1,//起始页
            pageList: [15, 20, 30, 50, 100, 10000],//分页步进值
            sidePagination: "server",//服务端分页
            contentType: "application/x-www-form-urlencoded",//请求数据内容格式 默认是 application/json 自己根据格式自行服务端处理
            dataType: "json",//期待返回数据类型
            method: "post",//请求方式
            searchAlign: "left",//查询框对齐方式
            queryParamsType: "limit",//查询参数组织方式
            queryParams: function getParams(params) {
                //params obj
                params.other = "otherInfo";
                return params;
            },
            searchOnEnterKey: false,//回车搜索
            showRefresh: true,//刷新按钮
            showColumns: true,//列选择按钮
            buttonsAlign: "left",//按钮对齐方式
            toolbar: "#toolbar",//指定工具栏
            toolbarAlign: "right",//工具栏对齐方式
            columns: [
                {
                    title: "全选",
                    field: "select",
                    checkbox: true,
                    width: 20,//宽度
                    align: "center",//水平
                    valign: "middle"//垂直
                }, { field: "iGuid", title: "iGuid", visible:false }
                 , { field: "iItemName", title: "项目名称", sortable: true }
, { field: "iCompany", title: "所在公司", sortable: true }
, { field: "iWorkPlace", title: "所在工作地", sortable: true }
, { field: "iEmpNo", title: "工号", sortable: true }
, { field: "iName", title: "姓名", sortable: true }
, { field: "iIdCard", title: "身份证号", sortable: true }
, { field: "iSex", title: "性别", sortable: true }
, { field: "iBirthday", title: "出生日期", sortable: true }
, { field: "iRegistry", title: "户籍", sortable: true }
, { field: "iNation", title: "民族", sortable: true }
, { field: "iResidenceProperty", title: "户口性质", sortable: true }
, { field: "iRegistryAddress", title: "户籍地址", sortable: true }
, { field: "iIssuedBy", title: "签发机关", sortable: true }
, { field: "iIdCardValidate", title: "身份证有效期", sortable: true }
, { field: "iLivedIn", title: "现住地", sortable: true }
, { field: "iPhone", title: "联系电话", sortable: true }
, { field: "iEmeContact", title: "紧急联系人", sortable: true }
, { field: "iEmeContactPhone", title: "紧急联系人电话", sortable: true }
, { field: "iEmail", title: "邮箱", sortable: true }
, { field: "iPostCode", title: "邮编", sortable: true }
, { field: "iHeight", title: "身高（cm）", sortable: true }
, { field: "iWeight", title: "体重", sortable: true }
, { field: "iBloodType", title: "血型", sortable: true }
, { field: "iMariage", title: "婚姻状况", sortable: true }
, { field: "iAge", title: "年龄", sortable: true }
, { field: "iHealthCheck", title: "体检", sortable: true }
, { field: "iPolitical", title: "政治面貌", sortable: true }
, { field: "iEducationLevel", title: "文化水平", sortable: true }
, { field: "iMajor", title: "专业", sortable: true }
, { field: "iGraduatedSchool", title: "毕业学校", sortable: true }
, { field: "iGraduatedDate", title: "毕业时间", sortable: true }
, { field: "iWorkExperience", title: "工作经历", sortable: true }

            ],
            onClickRow: function (row, $element) {
                //$element是当前tr的jquery对象
                //$element.css("background-color", "green");
            },//单击row事件
            onDblClickRow: function (row, $element) {

                $("#addModalLabel").html("修改记录");
                $('#addModal').modal('toggle');

                var width = $("#addModal").width();
                var height = $("#addModal").height();
                var $shade = $('<div id="waiting"></div>');
                $shade.css({ width: '100%', height: '100%', position: 'absolute', top: 0, left: 0, background: '#fff url(/Content/images/waiting.gif) center center no-repeat', opacity: 0.4 });
                $("#addModal").append($shade);
                $.get("/HR/GetHRInfo?guid=" + row.iGuid, function (result) {
                    if (result.success) {
                        myViewModel.iGuid(result.data.iGuid);
                        myViewModel.iItemName(result.data.iItemName);
                        myViewModel.iCompany(result.data.iCompany);
                        myViewModel.iWorkPlace(result.data.iWorkPlace);
                        myViewModel.iEmpNo(result.data.iEmpNo);
                        myViewModel.iName(result.data.iName);
                        myViewModel.iIdCard(result.data.iIdCard);
                        myViewModel.iSex(result.data.iSex);
                        myViewModel.iBirthday(result.data.iBirthday);
                        myViewModel.iRegistry(result.data.iRegistry);
                        myViewModel.iNation(result.data.iNation);
                        myViewModel.iResidenceProperty(result.data.iResidenceProperty);
                        myViewModel.iRegistryAddress(result.data.iRegistryAddress);
                        myViewModel.iIssuedBy(result.data.iIssuedBy);
                        myViewModel.iIdCardValidate(result.data.iIdCardValidate);
                        myViewModel.iLivedIn(result.data.iLivedIn);
                        myViewModel.iPhone(result.data.iPhone);
                        myViewModel.iEmeContact(result.data.iEmeContact);
                        myViewModel.iEmeContactPhone(result.data.iEmeContactPhone);
                        myViewModel.iEmail(result.data.iEmail);
                        myViewModel.iPostCode(result.data.iPostCode);
                        myViewModel.iHeight(result.data.iHeight);
                        myViewModel.iWeight(result.data.iWeight);
                        myViewModel.iBloodType(result.data.iBloodType);
                        myViewModel.iMariage(result.data.iMariage);
                        myViewModel.iAge(result.data.iAge);
                        myViewModel.iHealthCheck(result.data.iHealthCheck);
                        myViewModel.iPolitical(result.data.iPolitical);
                        myViewModel.iEducationLevel(result.data.iEducationLevel);
                        myViewModel.iMajor(result.data.iMajor);
                        myViewModel.iGraduatedSchool(result.data.iGraduatedSchool);
                        myViewModel.iGraduatedDate(result.data.iGraduatedDate);
                        myViewModel.iWorkExperience(result.data.iWorkExperience);
                        myViewModel.iWageBank(result.data.iWageBank);
                        myViewModel.iWageBankName(result.data.iWageBankName);
                        myViewModel.iWageAccount(result.data.iWageAccount);
                        myViewModel.iSocialSecurityAccount(result.data.iSocialSecurityAccount);
                        myViewModel.iProvidentAccount(result.data.iProvidentAccount);
                        myViewModel.iEmpType(result.data.iEmpType);
                        myViewModel.iPosition(result.data.iPosition);
                        myViewModel.iManageLevel(result.data.iManageLevel);
                        myViewModel.iProjectGroup(result.data.iProjectGroup);
                        myViewModel.iCompanyWorkYear(result.data.iCompanyWorkYear);
                        myViewModel.iFirstDep(result.data.iFirstDep);
                        myViewModel.iSecondDep(result.data.iSecondDep);
                        myViewModel.iThirdDep(result.data.iThirdDep);
                        myViewModel.iFourthDep(result.data.iFourthDep);
                        myViewModel.iFifthDep(result.data.iFifthDep);
                        myViewModel.iEmployeeStatus(result.data.iEmployeeStatus);
                        myViewModel.iEmployeeDate(result.data.iEmployeeDate);
                        myViewModel.iPositiveDate(result.data.iPositiveDate);
                        myViewModel.iContractType(result.data.iContractType);
                        myViewModel.iContractSignStatus(result.data.iContractSignStatus);
                        myViewModel.iContractTerm(result.data.iContractTerm);
                        myViewModel.iContractDeadLine(result.data.iContractDeadLine);
                        myViewModel.iResignType(result.data.iResignType);
                        myViewModel.iResignDate(result.data.iResignDate);
                        myViewModel.iResignReason(result.data.iResignReason);
                        myViewModel.iFileLocation(result.data.iFileLocation);
                        myViewModel.iIsReturnFee(result.data.iIsReturnFee);
                        myViewModel.iIsSocialInsurancePaid(result.data.iIsSocialInsurancePaid);
                        myViewModel.iIsProvidentPaid(result.data.iIsProvidentPaid);
                        myViewModel.iIsCommercialInsurancePaid(result.data.iIsCommercialInsurancePaid);
                        myViewModel.iCreatedOn(result.data.iCreatedOn);
                        myViewModel.iCreatedBy(result.data.iCreatedBy);
                        myViewModel.iUpdatedOn(result.data.iUpdatedOn);
                        myViewModel.iUpdatedBy(result.data.iUpdatedBy);
                        myViewModel.iStatus(result.data.iStatus);
                        myViewModel.iIsDeleted(result.data.iIsDeleted);

                    }
                    else {
                        console.log(result.msg);
                        toastr.error('获取数据失败！');
                    }
                    $shade.remove();
                });
            },
            locale: "zh-CN",//中文支持,
            detailView: true, //是否显示详情折叠
            detailFormatter: function (index, row, element) {
                var html = '';
                $.each(row, function (key, val) {
                    html += "<p>" + key + ":" + val + "</p>"
                });
                return html;
            }
        });

        $("#addRecord").click(function () {
            var param = {};
            param.jsonString = ko.toJSON(myViewModel);
            $.ajax({
                url: "/HR/SaveChanges",
                type: "POST",
                data: param,
                dataType: 'text',
                success: function (data) {
                    $('#addModal').modal('toggle');
                    if (data == "success") {
                       $('#mytab').bootstrapTable('refresh');
                    }
                    else {
                        console.log(data);
                        toastr.error('保存数据失败！');

                    }
                }
            });
            alert(jsonData);
            $('#mytab').bootstrapTable('refresh');
            $('#addModal').modal('toggle');

        });

        $("#NewRecord").click(function () {
            myViewModel.iGuid("");
            myViewModel.iItemName("");
            myViewModel.iCompany("");
            myViewModel.iWorkPlace("");
            myViewModel.iEmpNo("");
            myViewModel.iName("");
            myViewModel.iIdCard("");
            myViewModel.iSex("");
            myViewModel.iBirthday("");
            myViewModel.iRegistry("");
            myViewModel.iNation("");
            myViewModel.iResidenceProperty("");
            myViewModel.iRegistryAddress("");
            myViewModel.iIssuedBy("");
            myViewModel.iIdCardValidate("");
            myViewModel.iLivedIn("");
            myViewModel.iPhone("");
            myViewModel.iEmeContact("");
            myViewModel.iEmeContactPhone("");
            myViewModel.iEmail("");
            myViewModel.iPostCode("");
            myViewModel.iHeight("");
            myViewModel.iWeight("");
            myViewModel.iBloodType("");
            myViewModel.iMariage("");
            myViewModel.iAge("");
            myViewModel.iHealthCheck("");
            myViewModel.iPolitical("");
            myViewModel.iEducationLevel("");
            myViewModel.iMajor("");
            myViewModel.iGraduatedSchool("");
            myViewModel.iGraduatedDate("");
            myViewModel.iWorkExperience("");
            myViewModel.iWageBank("");
            myViewModel.iWageBankName("");
            myViewModel.iWageAccount("");
            myViewModel.iSocialSecurityAccount("");
            myViewModel.iProvidentAccount("");
            myViewModel.iEmpType("");
            myViewModel.iPosition("");
            myViewModel.iManageLevel("");
            myViewModel.iProjectGroup("");
            myViewModel.iCompanyWorkYear("");
            myViewModel.iFirstDep("");
            myViewModel.iSecondDep("");
            myViewModel.iThirdDep("");
            myViewModel.iFourthDep("");
            myViewModel.iFifthDep("");
            myViewModel.iEmployeeStatus("");
            myViewModel.iEmployeeDate("");
            myViewModel.iPositiveDate("");
            myViewModel.iContractType("");
            myViewModel.iContractSignStatus("");
            myViewModel.iContractTerm("");
            myViewModel.iContractDeadLine("");
            myViewModel.iResignType("");
            myViewModel.iResignDate("");
            myViewModel.iResignReason("");
            myViewModel.iFileLocation("");
            myViewModel.iIsReturnFee("");
            myViewModel.iIsSocialInsurancePaid("");
            myViewModel.iIsProvidentPaid("");
            myViewModel.iIsCommercialInsurancePaid("");
            myViewModel.iCreatedOn("");
            myViewModel.iCreatedBy("");
            myViewModel.iUpdatedOn("");
            myViewModel.iUpdatedBy("");
            myViewModel.iStatus("1");
            myViewModel.iIsDeleted("0");

            $("#addModalLabel").html("添加记录");

        });
        var myViewModel = new ViewModel();
        ko.applyBindings(myViewModel);

    })

    function tableHeight() {
        return $(window).height() * 0.85;
    }

    function infoFormatter(value, row, index) {
        return "id:" + row.id + " name:" + row.name + " age:" + row.age;
    }

    //初始化fileinput
    var FileInput = function () {
        var oFile = new Object();
        //初始化fileinput控件（第一次初始化）
        oFile.Init = function (ctrlName, uploadUrl) {
            var control = $('#' + ctrlName);
            //初始化上传控件的样式
            control.fileinput({
                language: 'zh', //设置语言
                uploadUrl: uploadUrl, //上传的地址
                allowedFileExtensions: ['xls', 'xlsx'],//接收的文件后缀
                showUpload: false, //是否显示上传按钮
                showCaption: false,//是否显示标题
                browseClass: "btn btn-primary", //按钮样式
                //dropZoneEnabled: false,//是否显示拖拽区域
                //minImageWidth: 50, //图片的最小宽度
                //minImageHeight: 50,//图片的最小高度
                //maxImageWidth: 1000,//图片的最大宽度
                //maxImageHeight: 1000,//图片的最大高度
                maxFileSize: 0,//单位为kb，如果为0表示不限制文件大小
                //minFileCount: 0,
                maxFileCount: 1, //表示允许同时上传的最大文件个数
                enctype: 'multipart/form-data',
                validateInitialCount: true,
                previewFileIcon: "<i class='glyphicon glyphicon-king'></i>",
                msgFilesTooMany: "选择上传的文件数量({n}) 超过允许的最大数值{m}！",
            });
            //导入文件上传完成之后的事件
            $("#txt_file").on("fileuploaded", function (event, data, previewId, index) {
                $("#importModal").modal("hide");
                if (!data.response.success) {
                    toastr.error('文件格式类型不正确');
                    console.log(data.response.msg);
                    return;
                }
                //刷新表格
                $('#mytab').bootstrapTable('refresh');
            });
        }
        return oFile;
    };
    var oFileInput = new FileInput();
    oFileInput.Init("txt_file", "/Manage/ImportPeople");
    function ExportData() {
        var selects = $('#mytab').bootstrapTable('getSelections');
        var columns = $('#mytab').bootstrapTable('getOptions').columns;
        if (selects && selects.length > 0) {
            var newSelects = JSON.stringify(selects);
            var newColumns = JSON.stringify(columns);
            //alert(newSelects);

            var url = "/Manage/ExportPeople";
            var inputs = '<input type="hidden" name="icolumns" value="' + newColumns + '" />';
            inputs += ' <input type="hidden" name="idata" value="' + newSelects.replace(new RegExp("\"", "gm"), "'") + '" />';
            $('<form action="' + url + '" method="post" target="_blank">' + inputs + '</form>').appendTo('body').submit().remove();

        }
        else {
            toastr.error('未选择数据');
        }

    }


    function ViewModel() {
        var self = this;
        self.iGuid = ko.observable("");
        self.iItemName = ko.observable("");
        self.iCompany = ko.observable("");
        self.iWorkPlace = ko.observable("");
        self.iEmpNo = ko.observable("");
        self.iName = ko.observable("");
        self.iIdCard = ko.observable("");
        self.iSex = ko.observable("");
        self.iBirthday = ko.observable("");
        self.iRegistry = ko.observable("");
        self.iNation = ko.observable("");
        self.iResidenceProperty = ko.observable("");
        self.iRegistryAddress = ko.observable("");
        self.iIssuedBy = ko.observable("");
        self.iIdCardValidate = ko.observable("");
        self.iLivedIn = ko.observable("");
        self.iPhone = ko.observable("");
        self.iEmeContact = ko.observable("");
        self.iEmeContactPhone = ko.observable("");
        self.iEmail = ko.observable("");
        self.iPostCode = ko.observable("");
        self.iHeight = ko.observable("");
        self.iWeight = ko.observable("");
        self.iBloodType = ko.observable("");
        self.iMariage = ko.observable("");
        self.iAge = ko.observable("");
        self.iHealthCheck = ko.observable("");
        self.iPolitical = ko.observable("");
        self.iEducationLevel = ko.observable("");
        self.iMajor = ko.observable("");
        self.iGraduatedSchool = ko.observable("");
        self.iGraduatedDate = ko.observable("");
        self.iWorkExperience = ko.observable("");
        self.iWageBank = ko.observable("");
        self.iWageBankName = ko.observable("");
        self.iWageAccount = ko.observable("");
        self.iSocialSecurityAccount = ko.observable("");
        self.iProvidentAccount = ko.observable("");
        self.iEmpType = ko.observable("");
        self.iPosition = ko.observable("");
        self.iManageLevel = ko.observable("");
        self.iProjectGroup = ko.observable("");
        self.iCompanyWorkYear = ko.observable("");
        self.iFirstDep = ko.observable("");
        self.iSecondDep = ko.observable("");
        self.iThirdDep = ko.observable("");
        self.iFourthDep = ko.observable("");
        self.iFifthDep = ko.observable("");
        self.iEmployeeStatus = ko.observable("");
        self.iEmployeeDate = ko.observable("");
        self.iPositiveDate = ko.observable("");
        self.iContractType = ko.observable("");
        self.iContractSignStatus = ko.observable("");
        self.iContractTerm = ko.observable("");
        self.iContractDeadLine = ko.observable("");
        self.iResignType = ko.observable("");
        self.iResignDate = ko.observable("");
        self.iResignReason = ko.observable("");
        self.iFileLocation = ko.observable("");
        self.iIsReturnFee = ko.observable("");
        self.iIsSocialInsurancePaid = ko.observable("");
        self.iIsProvidentPaid = ko.observable("");
        self.iIsCommercialInsurancePaid = ko.observable("");
        self.iCreatedOn = ko.observable("");
        self.iCreatedBy = ko.observable("");
        self.iUpdatedOn = ko.observable("");
        self.iUpdatedBy = ko.observable("");
        self.iStatus = ko.observable("1");
        self.iIsDeleted = ko.observable("0");
    }


</script>


